<?xml version="1.0" encoding="gbk" ?>
<!-- 韩勤作 -->
<project name="make" default="batisFileCopyed" basedir=".">
	<!--项目Classes存放目录地址-->
	<property name="classes" location="build\classes\main"/>
	<!-- Java的原代码位置，在使用JavaC任务时使用 -->
	<property name="src" location="src\main\java"/>
	<!-- ClassPath的外部Jar包 -->
	<property name="lib" location="src\lib"/>

	<available file="${classes}" type="dir" property="buildPathExisted" />

	<!-- 编译时使用的ClassPath -->
	<path id="classpath">
		<fileset dir="${lib}">
			<include name="*.jar" />
		</fileset>
	</path>

	<!-- 初始化编译环境 -->
	<target name="initEnv" description="Init Build Environment...">
		<antcall target="delBuildPath" />
		<antcall target="createBuildPath" />
	</target>

	<!-- 编辑文件，使用IDEA编译时总是全部编译，导致Copy时又全部Copy太慢，使用Ant来编译 -->
	<target name="complie" depends="initEnv">
		<echo>开始编译java文件...</echo>
        <javac srcdir="${src}" destdir="${classes}" encoding="UTF-8" debug="on" optimize="on" source="1.8" >
            <classpath refid="classpath"/>
        </javac>
		<echo>成功编译java文件...</echo>
    </target>

	<!-- awater里面mapper.xml写在跟类同级上，用脚本启动调用服务会出错 -->
	<target name="batisFileCopyed" depends="complie">
		<echo>开始拷贝mapper.xml文件...</echo>
		<copy todir="${classes}" encoding="UTF-8" overwrite="true">
			<fileset dir="${src}">
				<include name="**/*.xml" />
			</fileset>
		</copy>
		<echo>成功拷贝mapper.xml文件...</echo>
	</target>

	<!-- 创建编译路径 -->
	<target name="createBuildPath" unless="buildPathExisted">
		<mkdir dir="${classes}" />
		<echo>成功创建${classes}目录...</echo>
	</target>

	<!-- 删除编译路径 -->
	<target name="delBuildPath" if="buildPathExisted">
		<delete dir="${classes}" />
		<echo>成功删除${classes}目录...</echo>
		<mkdir dir="${classes}" />
		<echo>成功创建${classes}目录...</echo>
	</target>
</project>